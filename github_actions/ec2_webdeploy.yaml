name: React CI/CD to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # manual trigger from Actions tab

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    env:
      CI: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            pnpm-lock.yaml
            yarn.lock

      - name: Install dependencies
        run: npm ci || npm install

      - name: Run tests (optional)
        run: npm test --if-present

      - name: Build production bundle
        run: npm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: |
            dist/**
            build/**
          if-no-files-found: error

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: ./artifact

      - name: Prepare SSH key & known_hosts
        shell: bash
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/key.pem
          chmod 600 ~/.ssh/key.pem
          ssh-keyscan -H "${{ secrets.EC2_HOST }}" >> ~/.ssh/known_hosts

      - name: Detect build directory
        id: detect
        run: |
          if [ -d "artifact/dist" ]; then
            echo "dir=artifact/dist" >> $GITHUB_OUTPUT
          elif [ -d "artifact/build" ]; then
            echo "dir=artifact/build" >> $GITHUB_OUTPUT
          else
            echo "No build output found"; exit 1
          fi

      - name: Sync files to EC2 (atomic)
        run: |
          SRC_DIR="${{ steps.detect.outputs.dir }}"
          SSH="ssh -i ~/.ssh/key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}"
          RSYNC="rsync -az --delete -e 'ssh -i ~/.ssh/key.pem'"

          $SSH "sudo mkdir -p '${{ secrets.TARGET_DIR }}' && sudo chown -R \$USER:\$USER '${{ secrets.TARGET_DIR }}'"

          TMP="/tmp/react-$(date +%s)"
          $SSH "mkdir -p $TMP"
          $RSYNC "${SRC_DIR}/" "${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:$TMP/"

          $SSH "sudo rm -rf '${{ secrets.TARGET_DIR }}'/* && sudo cp -r $TMP/* '${{ secrets.TARGET_DIR }}' && rm -rf $TMP && sudo nginx -t && sudo systemctl reload nginx"

      - name: Post-deploy verification
        run: |
          echo "Deployed to http://${{ secrets.EC2_HOST }}/"
          curl -I "http://${{ secrets.EC2_HOST }}/"